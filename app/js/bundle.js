(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

//cards 
var cards = document.querySelectorAll('.servises__tab__item'),
    text = document.querySelectorAll('.servises__tab__item__text'),
    link = document.querySelectorAll('.servises__link-more'),
    title = document.querySelectorAll('.servises__tab__item__title'),
    cardsParent = document.querySelector('.servises__tab');

function hideContent() {
  text.forEach(function (item) {
    item.style.display = 'none';
  });
  link.forEach(function (item) {
    item.style.display = 'none';
  });
  cards.forEach(function (item) {
    item.classList.remove('active');
  });
  title.forEach(function (item) {
    item.classList.remove('active_title');
  });
}

function showContent(i) {
  text[i].style.display = 'block';
  link[i].style.display = 'block';
  cards[i].classList.add('active');
  title[i].classList.add('active_title');
}

hideContent();
showContent(0);
cardsParent.addEventListener('click', function () {
  var target = event.target;

  if (target && target.classList.contains('servises__tab__item')) {
    cards.forEach(function (item, i) {
      if (target === item) {
        hideContent();
        showContent(i);
      }
    });
  }
}); //slider

var sliders = document.querySelectorAll('.testimonials__slider-items__item');
var prev = document.querySelector('.prev');
var next = document.querySelector('.next');
var slideIndex = 1;
showSlide(slideIndex);

function showSlide(n) {
  if (n > sliders.length) {
    slideIndex = 1;
  }

  if (n < 1) {
    slideIndex = sliders.length;
  }

  sliders.forEach(function (item) {
    return item.style.display = 'none';
  });
  sliders[slideIndex - 1].style.display = '';
}

function plusSlides(n) {
  showSlide(slideIndex += n);
}

prev.addEventListener('click', function () {
  plusSlides(-1);
});
next.addEventListener('click', function () {
  plusSlides(1);
}); // end slider
//burger 

var burgerMenu = document.querySelector('.header__menu'),
    menuItem = document.querySelector('.navigation__menu-burger');
showMenu();

function showMenu() {
  burgerMenu.addEventListener('click', function () {
    var styleMenu = window.getComputedStyle(menuItem);

    if (styleMenu.display === 'none') {
      menuItem.style.display = 'block';
    } else {
      menuItem.style.display = 'none';
    }
  });
  menuItem.addEventListener('click', function () {
    menuItem.style.display = 'none';
  });
} // end burger menu


var offset = 100;
var scrollUp = document.querySelector('.main-screen__scroll-up');
var scrollUpSvgPath = document.querySelector('.main-screen__scroll-up__svg-path');
var pathLength = scrollUpSvgPath.getTotalLength();

var getTop = function getTop() {
  return window.pageYOffset || document.documentElement.scrollTop;
};

scrollUpSvgPath.style.strokeDasharray = "".concat(pathLength, " ").concat(pathLength);
scrollUpSvgPath.style.transition = 'stroke-dashoffset 20ms'; // update dash offset

var updateDashOffset = function updateDashOffset() {
  var height = document.documentElement.scrollHeight - window.innerHeight;
  var dashoffset = pathLength - getTop() * pathLength / height;
  scrollUpSvgPath.style.strokeDashoffset = dashoffset;
}; //onscroll


window.addEventListener('scroll', function () {
  updateDashOffset();

  if (getTop() > offset) {
    scrollUp.classList.add('main-screen__scroll-up--active');
  } else {
    scrollUp.classList.remove('main-screen__scroll-up--active');
  }
}); //clik

scrollUp.addEventListener('click', function () {
  window.scrollTo({
    top: 0,
    behavior: 'smooth'
  });
});
updateDashOffset(); //accordeon 

var btn = document.querySelector('.charger__accordeon'),
    txt = document.querySelector('.charger__text'),
    styleBtn = window.getComputedStyle(btn),
    styleTxt = window.getComputedStyle(txt);
btn.addEventListener('click', function () {
  txt.classList.toggle('charger__text--active');

  if (styleBtn.marginBottom === '0px') {
    btn.style.marginBottom = '239px';
  } else {
    btn.style.marginBottom = '0px';
  }

  if (styleTxt.marginBottom === '0px') {
    txt.style.marginBottom = '20px';
  } else {
    txt.style.marginBottom = '0px';
  }
}); //theme site 

var checkbox = document.querySelector('.l');
var root = document.documentElement;

if (localStorage.getItem('isChecked') === 'true') {
  checkbox.checked = true;
  root.style.setProperty('--background_color_testimonials', 'rgba(219,215,215,.8)');
  root.style.setProperty('--background_color_darken', 'rgba(219,215,215,.8)');
  root.style.setProperty('--color_text_white', '#000000');
  root.style.setProperty('--background_color', '#FFFFFF');
} else {
  checkbox.checked = false;
  root.style.setProperty('--background_color_testimonials', 'rgba(0,0,0,.9)');
  root.style.setProperty('--background_color_darken', 'rgba(0,0,0,.9)');
  root.style.setProperty('--color_text_white', '#FFFFFF');
  root.style.setProperty('--background_color', '#110d0c');
}

checkbox.addEventListener('click', function () {
  if (localStorage.getItem('isChecked') === 'true') {
    localStorage.setItem('isChecked', false);
    root.style.setProperty('--background_color_testimonials', 'rgba(0,0,0,.9)');
    root.style.setProperty('--background_color_darken', 'rgba(0,0,0,.9)');
    root.style.setProperty('--color_text_white', '#FFFFFF');
    root.style.setProperty('--background_color', '#110d0c');
    console.log('Hello');
  } else {
    localStorage.setItem('isChecked', true);
    root.style.setProperty('--background_color_testimonials', 'rgba(219,215,215,.8)');
    root.style.setProperty('--background_color_darken', 'rgba(219,215,215,.8)');
    root.style.setProperty('--color_text_white', '#000000');
    root.style.setProperty('--background_color', '#FFFFFF');
  }
}); //calculate margin PROJECT

var images = document.querySelectorAll('.project__row-top__items'),
    wrapper = document.querySelector('.project__row-top');
var widthIm = 0,
    widthWievport,
    marg;
widthWievport = wrapper.offsetWidth;
images.forEach(function (items) {
  widthIm = widthIm + items.offsetWidth;
});
marg = Math.round((widthWievport - widthIm) / 3);
root.style.setProperty('--margin_row-top', "".concat(marg, "px"));

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJwcm9qZWN0cy9DaGFyZ2VyL3NyYy9qcy9hcHAuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0FBO0FBQ0EsSUFBTSxLQUFLLEdBQUcsUUFBUSxDQUFDLGdCQUFULENBQTBCLHNCQUExQixDQUFkO0FBQUEsSUFDUSxJQUFJLEdBQUcsUUFBUSxDQUFDLGdCQUFULENBQTBCLDRCQUExQixDQURmO0FBQUEsSUFFUSxJQUFJLEdBQUcsUUFBUSxDQUFDLGdCQUFULENBQTBCLHNCQUExQixDQUZmO0FBQUEsSUFHUSxLQUFLLEdBQUcsUUFBUSxDQUFDLGdCQUFULENBQTBCLDZCQUExQixDQUhoQjtBQUFBLElBSVEsV0FBVyxHQUFHLFFBQVEsQ0FBQyxhQUFULENBQXVCLGdCQUF2QixDQUp0Qjs7QUFNSSxTQUFTLFdBQVQsR0FBd0I7QUFDcEIsRUFBQSxJQUFJLENBQUMsT0FBTCxDQUFjLFVBQUEsSUFBSSxFQUFJO0FBQ2xCLElBQUEsSUFBSSxDQUFDLEtBQUwsQ0FBVyxPQUFYLEdBQXFCLE1BQXJCO0FBRUgsR0FIRDtBQUlBLEVBQUEsSUFBSSxDQUFDLE9BQUwsQ0FBYyxVQUFBLElBQUksRUFBSTtBQUNsQixJQUFBLElBQUksQ0FBQyxLQUFMLENBQVcsT0FBWCxHQUFxQixNQUFyQjtBQUVILEdBSEQ7QUFJQSxFQUFBLEtBQUssQ0FBQyxPQUFOLENBQWUsVUFBQSxJQUFJLEVBQUk7QUFDbkIsSUFBQSxJQUFJLENBQUMsU0FBTCxDQUFlLE1BQWYsQ0FBc0IsUUFBdEI7QUFFSCxHQUhEO0FBSUEsRUFBQSxLQUFLLENBQUMsT0FBTixDQUFjLFVBQUEsSUFBSSxFQUFJO0FBQ2xCLElBQUEsSUFBSSxDQUFDLFNBQUwsQ0FBZSxNQUFmLENBQXNCLGNBQXRCO0FBQ0gsR0FGRDtBQUdIOztBQUNELFNBQVMsV0FBVCxDQUFzQixDQUF0QixFQUF5QjtBQUNyQixFQUFBLElBQUksQ0FBQyxD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V0FBMUI7QUFDQSxDQUZEO0FBR0MsSUFBSSxHQUFHLElBQUksQ0FBQyxLQUFMLENBQVcsQ0FBQyxhQUFhLEdBQUMsT0FBZixJQUF3QixDQUFuQyxDQUFQO0FBQ0EsSUFBSSxDQUFDLEtBQUwsQ0FBVyxXQUFYLENBQXVCLGtCQUF2QixZQUE4QyxJQUE5QyIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwiLy9jYXJkcyBcclxuY29uc3QgY2FyZHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc2VydmlzZXNfX3RhYl9faXRlbScpLFxyXG4gICAgICAgIHRleHQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc2VydmlzZXNfX3RhYl9faXRlbV9fdGV4dCcpLFxyXG4gICAgICAgIGxpbmsgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc2VydmlzZXNfX2xpbmstbW9yZScpLCBcclxuICAgICAgICB0aXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zZXJ2aXNlc19fdGFiX19pdGVtX190aXRsZScpLFxyXG4gICAgICAgIGNhcmRzUGFyZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnNlcnZpc2VzX190YWInKTtcclxuXHJcbiAgICBmdW5jdGlvbiBoaWRlQ29udGVudCAoKSB7XHJcbiAgICAgICAgdGV4dC5mb3JFYWNoIChpdGVtID0+IHtcclxuICAgICAgICAgICAgaXRlbS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG5cclxuICAgICAgICB9KTtcclxuICAgICAgICBsaW5rLmZvckVhY2ggKGl0ZW0gPT4ge1xyXG4gICAgICAgICAgICBpdGVtLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGNhcmRzLmZvckVhY2ggKGl0ZW0gPT4ge1xyXG4gICAgICAgICAgICBpdGVtLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aXRsZS5mb3JFYWNoKGl0ZW0gPT4ge1xyXG4gICAgICAgICAgICBpdGVtLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZV90aXRsZScpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgZnVuY3Rpb24gc2hvd0NvbnRlbnQgKGkpIHtcclxuICAgICAgICB0ZXh0W2ldLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG4gICAgICAgIGxpbmtbaV0uc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcbiAgICAgICAgY2FyZHNbaV0uY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XHJcbiAgICAgICAgdGl0bGVbaV0uY2xhc3NMaXN0LmFkZCgnYWN0aXZlX3RpdGxlJyk7XHJcblxyXG4gICAgfVxyXG4gICAgaGlkZUNvbnRlbnQgKCk7XHJcbiAgICBzaG93Q29udGVudCAoMCk7XHJcbiAgICBjYXJkc1BhcmVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgIGNvbnN0IHRhcmdldCA9IGV2ZW50LnRhcmdldDtcclxuICAgIGlmICh0YXJnZXQgJiYgdGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnc2VydmlzZXNfX3RhYl9faXRlbScpKSB7XHJcbiAgICAgICAgY2FyZHMuZm9yRWFjaCAoIChpdGVtLCBpKSA9PiB7XHJcbiAgICAgICAgICAgIGlmICh0YXJnZXQgPT09IGl0ZW0pIHtcclxuICAgICAgICAgICAgICAgIGhpZGVDb250ZW50ICgpO1xyXG4gICAgICAgICAgICAgICAgc2hvd0NvbnRlbnQgKGkpOyBcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59KTtcclxuLy9zbGlkZXJcclxuY29uc3Qgc2xpZGVycyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy50ZXN0aW1vbmlhbHNfX3NsaWRlci1pdGVtc19faXRlbScpO1xyXG5jb25zdCBwcmV2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByZXYnKTtcclxuY29uc3QgbmV4dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5uZXh0Jyk7XHJcbmxldCBzbGlkZUluZGV4ID0gMTtcclxuXHJcblxyXG5zaG93U2xpZGUoc2xpZGVJbmRleCk7XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIHNob3dTbGlkZSAobikge1xyXG4gICAgICAgICAgICBpZiAobiA+IHNsaWRlcnMubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICBzbGlkZUluZGV4ID0gMTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAobjwxKSB7XHJcbiAgICAgICAgICAgICAgICBzbGlkZUluZGV4ID0gc2xpZGVycy5sZW5ndGg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgc2xpZGVycy5mb3JFYWNoIChpdGVtID0+IGl0ZW0uc3R5bGUuZGlzcGxheSA9ICdub25lJyk7XHJcblxyXG4gICAgICAgICAgICBzbGlkZXJzW3NsaWRlSW5kZXgtMV0uc3R5bGUuZGlzcGxheSA9ICcnO1xyXG4gICAgICAgIH1cclxuICAgICAgICBmdW5jdGlvbiBwbHVzU2xpZGVzKG4pIHtcclxuICAgICAgICAgc2hvd1NsaWRlKHNsaWRlSW5kZXggKz1uKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcHJldi5hZGRFdmVudExpc3RlbmVyICgnY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICAgcGx1c1NsaWRlcygtMSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgbmV4dC5hZGRFdmVudExpc3RlbmVyICgnY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICBwbHVzU2xpZGVzKDEpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIC8vIGVuZCBzbGlkZXJcclxuXHJcbiAgICAgICAgLy9idXJnZXIgXHJcblxyXG4gICAgY29uc3QgYnVyZ2VyTWVudSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5oZWFkZXJfX21lbnUnKSxcclxuICAgICAgICAgICAgbWVudUl0ZW0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yICgnLm5hdmlnYXRpb25fX21lbnUtYnVyZ2VyJyk7XHJcbiBzaG93TWVudSAoKTtcclxuICAgIGZ1bmN0aW9uIHNob3dNZW51KCkge1xyXG4gICAgICAgIGJ1cmdlck1lbnUuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgICAgICAgY29uc3Qgc3R5bGVNZW51ID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUobWVudUl0ZW0pO1xyXG5cclxuICAgICAgICAgICBpZiAoc3R5bGVNZW51LmRpc3BsYXkgPT09ICdub25lJykge1xyXG4gICAgICAgICAgICAgICBtZW51SXRlbS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcclxuICAgICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgIG1lbnVJdGVtLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIG1lbnVJdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICAgICAgICBtZW51SXRlbS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG5cclxuICAgICAgICB9KTsgICAgICAgIFxyXG4gICAgfSAvLyBlbmQgYnVyZ2VyIG1lbnVcclxuXHJcbiAgICBjb25zdCBvZmZzZXQgPSAxMDA7XHJcbiAgICBjb25zdCBzY3JvbGxVcCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tYWluLXNjcmVlbl9fc2Nyb2xsLXVwJyk7XHJcbiAgICBjb25zdCBzY3JvbGxVcFN2Z1BhdGggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubWFpbi1zY3JlZW5fX3Njcm9sbC11cF9fc3ZnLXBhdGgnKTtcclxuICAgIGNvbnN0IHBhdGhMZW5ndGggPSBzY3JvbGxVcFN2Z1BhdGguZ2V0VG90YWxMZW5ndGgoKTtcclxuICAgIGNvbnN0IGdldFRvcCA9ICgpID0+IHdpbmRvdy5wYWdlWU9mZnNldCB8fCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wO1xyXG5cclxuICAgIHNjcm9sbFVwU3ZnUGF0aC5zdHlsZS5zdHJva2VEYXNoYXJyYXkgPSBgJHtwYXRoTGVuZ3RofSAke3BhdGhMZW5ndGh9YDtcclxuICAgIHNjcm9sbFVwU3ZnUGF0aC5zdHlsZS50cmFuc2l0aW9uID0gJ3N0cm9rZS1kYXNob2Zmc2V0IDIwbXMnO1xyXG5cclxuICAgIC8vIHVwZGF0ZSBkYXNoIG9mZnNldFxyXG4gICAgY29uc3QgdXBkYXRlRGFzaE9mZnNldCA9ICgpID0+IHtcclxuICAgICAgICBjb25zdCBoZWlnaHQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsSGVpZ2h0IC0gd2luZG93LmlubmVySGVpZ2h0O1xyXG4gICAgICAgIGNvbnN0IGRhc2hvZmZzZXQgPSBwYXRoTGVuZ3RoIC0gKGdldFRvcCgpKnBhdGhMZW5ndGgvaGVpZ2h0KTtcclxuICAgICAgICBzY3JvbGxVcFN2Z1BhdGguc3R5bGUuc3Ryb2tlRGFzaG9mZnNldCA9IGRhc2hvZmZzZXQ7XHJcbiAgICB9O1xyXG4gICAgLy9vbnNjcm9sbFxyXG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsICgpID0+IHtcclxuICAgICAgICB1cGRhdGVEYXNoT2Zmc2V0KCk7XHJcbiAgICAgICAgaWYgKCBnZXRUb3AoKSA+IG9mZnNldCkge1xyXG4gICAgICAgICAgICBzY3JvbGxVcC5jbGFzc0xpc3QuYWRkKCdtYWluLXNjcmVlbl9fc2Nyb2xsLXVwLS1hY3RpdmUnKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBzY3JvbGxVcC5jbGFzc0xpc3QucmVtb3ZlKCdtYWluLXNjcmVlbl9fc2Nyb2xsLXVwLS1hY3RpdmUnKTsgIFxyXG4gICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAvL2NsaWtcclxuICAgIHNjcm9sbFVwLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgd2luZG93LnNjcm9sbFRvICh7XHJcbiAgICB0b3A6MCxcclxuICAgIGJlaGF2aW9yOiAnc21vb3RoJ1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSk7XHJcbiAgICB1cGRhdGVEYXNoT2Zmc2V0KCk7XHJcblxyXG4gICAgLy9hY2NvcmRlb24gXHJcblxyXG4gICAgY29uc3QgYnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNoYXJnZXJfX2FjY29yZGVvbicpLFxyXG4gICAgICAgICB0eHQgPSAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNoYXJnZXJfX3RleHQnKSxcclxuICAgICAgICAgc3R5bGVCdG4gPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShidG4pLFxyXG4gICAgICAgICBzdHlsZVR4dCA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHR4dCk7XHJcblxyXG4gICAgICAgICBidG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCgpID0+IHtcclxuICAgICAgICAgICAgdHh0LmNsYXNzTGlzdC50b2dnbGUoJ2NoYXJnZXJfX3RleHQtLWFjdGl2ZScpO1xyXG4gICAgICAgICAgICBpZiAoc3R5bGVCdG4ubWFyZ2luQm90dG9tID09PSAnMHB4Jykge1xyXG4gICAgICAgICAgICAgICAgYnRuLnN0eWxlLm1hcmdpbkJvdHRvbSA9ICcyMzlweCc7IFxyXG4gICAgICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBidG4uc3R5bGUubWFyZ2luQm90dG9tID0gJzBweCc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHN0eWxlVHh0Lm1hcmdpbkJvdHRvbSA9PT0gJzBweCcpIHtcclxuICAgICAgICAgICAgICAgIHR4dC5zdHlsZS5tYXJnaW5Cb3R0b20gPSAnMjBweCc7IFxyXG4gICAgICAgICAgICB9ZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0eHQuc3R5bGUubWFyZ2luQm90dG9tID0gJzBweCc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAvL3RoZW1lIHNpdGUgXHJcbiAgICAgICAgIFxyXG4gICAgICAgICBjb25zdCBjaGVja2JveCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IgKCcubCcpO1xyXG4gICAgICAgICBjb25zdCByb290ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xyXG5cclxuaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdpc0NoZWNrZWQnKSA9PT0gJ3RydWUnKSB7XHJcbiAgICBjaGVja2JveC5jaGVja2VkID0gdHJ1ZTtcclxuICAgIHJvb3Quc3R5bGUuc2V0UHJvcGVydHkoJy0tYmFja2dyb3VuZF9jb2xvcl90ZXN0aW1vbmlhbHMnLCAncmdiYSgyMTksMjE1LDIxNSwuOCknKTtcclxuICAgIHJvb3Quc3R5bGUuc2V0UHJvcGVydHkoJy0tYmFja2dyb3VuZF9jb2xvcl9kYXJrZW4nLCAncmdiYSgyMTksMjE1LDIxNSwuOCknKTtcclxuICAgIHJvb3Quc3R5bGUuc2V0UHJvcGVydHkoJy0tY29sb3JfdGV4dF93aGl0ZScsICcjMDAwMDAwJyk7XHJcbiAgICByb290LnN0eWxlLnNldFByb3BlcnR5KCctLWJhY2tncm91bmRfY29sb3InLCAnI0ZGRkZGRicpOyAgXHJcbn1lbHNlIHtcclxuICAgIGNoZWNrYm94LmNoZWNrZWQgPSBmYWxzZTtcclxuICAgIHJvb3Quc3R5bGUuc2V0UHJvcGVydHkoJy0tYmFja2dyb3VuZF9jb2xvcl90ZXN0aW1vbmlhbHMnLCAncmdiYSgwLDAsMCwuOSknKTtcclxuICAgIHJvb3Quc3R5bGUuc2V0UHJvcGVydHkoJy0tYmFja2dyb3VuZF9jb2xvcl9kYXJrZW4nLCAncmdiYSgwLDAsMCwuOSknKTtcclxuICAgIHJvb3Quc3R5bGUuc2V0UHJvcGVydHkoJy0tY29sb3JfdGV4dF93aGl0ZScsICcjRkZGRkZGJyk7XHJcbiAgICByb290LnN0eWxlLnNldFByb3BlcnR5KCctLWJhY2tncm91bmRfY29sb3InLCAnIzExMGQwYycpO1xyXG59XHJcblxyXG4gICAgICAgICBjaGVja2JveC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgICAgICAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdpc0NoZWNrZWQnKSA9PT0gJ3RydWUnKXtcclxuICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnaXNDaGVja2VkJywgZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgIHJvb3Quc3R5bGUuc2V0UHJvcGVydHkoJy0tYmFja2dyb3VuZF9jb2xvcl90ZXN0aW1vbmlhbHMnLCAncmdiYSgwLDAsMCwuOSknKTtcclxuICAgICAgICAgICAgICAgICByb290LnN0eWxlLnNldFByb3BlcnR5KCctLWJhY2tncm91bmRfY29sb3JfZGFya2VuJywgJ3JnYmEoMCwwLDAsLjkpJyk7XHJcbiAgICAgICAgICAgICAgICAgcm9vdC5zdHlsZS5zZXRQcm9wZXJ0eSgnLS1jb2xvcl90ZXh0X3doaXRlJywgJyNGRkZGRkYnKTtcclxuICAgICAgICAgICAgICAgICByb290LnN0eWxlLnNldFByb3BlcnR5KCctLWJhY2tncm91bmRfY29sb3InLCAnIzExMGQwYycpO1xyXG4gICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdIZWxsbycpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2lzQ2hlY2tlZCcsIHRydWUpO1xyXG4gICAgICAgICAgICAgICAgcm9vdC5zdHlsZS5zZXRQcm9wZXJ0eSgnLS1iYWNrZ3JvdW5kX2NvbG9yX3Rlc3RpbW9uaWFscycsICdyZ2JhKDIxOSwyMTUsMjE1LC44KScpO1xyXG4gICAgICAgICAgICAgICAgcm9vdC5zdHlsZS5zZXRQcm9wZXJ0eSgnLS1iYWNrZ3JvdW5kX2NvbG9yX2RhcmtlbicsICdyZ2JhKDIxOSwyMTUsMjE1LC44KScpO1xyXG4gICAgICAgICAgICAgICAgcm9vdC5zdHlsZS5zZXRQcm9wZXJ0eSgnLS1jb2xvcl90ZXh0X3doaXRlJywgJyMwMDAwMDAnKTtcclxuICAgICAgICAgICAgICAgIHJvb3Quc3R5bGUuc2V0UHJvcGVydHkoJy0tYmFja2dyb3VuZF9jb2xvcicsICcjRkZGRkZGJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAvL2NhbGN1bGF0ZSBtYXJnaW4gUFJPSkVDVFxyXG5cclxuICAgICAgICAgY29uc3QgaW1hZ2VzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCAoJy5wcm9qZWN0X19yb3ctdG9wX19pdGVtcycpLFxyXG4gICAgICAgICAgICAgICAgd3JhcHBlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IgKCcucHJvamVjdF9fcm93LXRvcCcpO1xyXG4gICAgICAgICBsZXQgd2lkdGhJbSA9IDAsIHdpZHRoV2lldnBvcnQsIG1hcmc7XHJcblxyXG4gICAgICAgICB3aWR0aFdpZXZwb3J0ID0gd3JhcHBlci5vZmZzZXRXaWR0aDtcclxuICAgICAgIGltYWdlcy5mb3JFYWNoKCBpdGVtcyAgPT4ge1xyXG4gICAgICAgIHdpZHRoSW0gPSB3aWR0aEltICsgaXRlbXMub2Zmc2V0V2lkdGg7XHJcbiAgICAgICB9KTtcclxuICAgICAgICBtYXJnID0gTWF0aC5yb3VuZCgod2lkdGhXaWV2cG9ydC13aWR0aEltKS8zKTtcclxuICAgICAgICByb290LnN0eWxlLnNldFByb3BlcnR5KCctLW1hcmdpbl9yb3ctdG9wJywgYCR7bWFyZ31weGApO1xyXG4gICAgICAgICJdLCJwcmVFeGlzdGluZ0NvbW1lbnQiOiIvLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbTV2WkdWZmJXOWtkV3hsY3k5aWNtOTNjMlZ5TFhCaFkyc3ZYM0J5Wld4MVpHVXVhbk1pTENKd2NtOXFaV04wY3k5RGFHRnlaMlZ5TDNOeVl5OXFjeTloY0hBdWFuTWlYU3dpYm1GdFpYTWlPbHRkTENKdFlYQndhVzVuY3lJNklrRkJRVUU3T3p0QlEwRkJPMEZCUTBFc1NVRkJUU3hMUVVGTExFZEJRVWNzVVVGQlVTeERRVUZETEdkQ1FVRlVMRU5CUVRCQ0xITkNRVUV4UWl4RFFVRmtPMEZCUVVFc1NVRkRVU3hKUVVGSkxFZEJRVWNzVVVGQlVTeERRVUZETEdkQ1FVRlVMRU5CUVRCQ0xEUkNRVUV4UWl4RFFVUm1PMEZCUVVFc1NVRkZVU3hKUVVGSkxFZEJRVWNzVVVGQlVTeERRVUZETEdkQ1FVRlVMRU5CUVRCQ0xITkNRVUV4UWl4RFFVWm1PMEZCUVVFc1NVRkhVU3hMUVVGTExFZEJRVWNzVVVGQlVTeERRVUZETEdkQ1FVRlVMRU5CUVRCQ0xEWkNRVUV4UWl4RFFVaG9RanRCUVVGQkxFbEJTVkVzVjBGQlZ5eEhRVUZITEZGQlFWRXNRMEZCUXl4aFFVRlVMRU5CUVhWQ0xHZENRVUYyUWl4RFFVcDBRanM3UVVGTlNTeFRRVUZUTEZkQlFWUXNSMEZCZDBJN1FVRkRjRUlzUlVGQlFTeEpRVUZKTEVOQlFVTXNUMEZCVEN4RFFVRmpMRlZCUVVFc1NVRkJTU3hGUVVGSk8wRkJRMnhDTEVsQlFVRXNTVUZCU1N4RFFVRkRMRXRCUVV3c1EwRkJWeXhQUVVGWUxFZEJRWEZDTEUxQlFYSkNPMEZCUlVnc1IwRklSRHRCUVVsQkxFVkJRVUVzU1VGQlNTeERRVUZETEU5QlFVd3NRMEZCWXl4VlFVRkJMRWxCUVVrc1JVRkJTVHRCUVVOc1FpeEpRVUZCTEVsQlFVa3NRMEZCUXl4TFFVRk1MRU5CUVZjc1QwRkJXQ3hIUVVGeFFpeE5RVUZ5UWp0QlFVVklMRWRCU0VRN1FVRkpRU3hGUVVGQkxFdEJRVXNzUTBGQlF5eFBRVUZPTEVOQlFXVXNWVUZCUVN4SlFVRkpMRVZCUVVrN1FVRkRia0lzU1VGQlFTeEpRVUZKTEVOQlFVTXNVMEZCVEN4RFFVRmxMRTFCUVdZc1EwRkJjMElzVVVGQmRFSTdRVUZGU0N4SFFVaEVPMEZCU1VFc1JVRkJRU3hMUVVGTExFTkJRVU1zVDBGQlRpeERRVUZqTEZWQlFVRXNTVUZCU1N4RlFVRkpPMEZCUTJ4Q0xFbEJRVUVzU1VGQlNTeERRVUZETEZOQlFVd3NRMEZCWlN4TlFVRm1MRU5CUVhOQ0xHTkJRWFJDTzBGQlEwZ3NSMEZHUkR0QlFVZElPenRCUVVORUxGTkJRVk1zVjBGQlZDeERRVUZ6UWl4RFFVRjBRaXhGUVVGNVFqdEJRVU55UWl4RlFVRkJMRWxCUVVrc1EwRkJReXhEUVVGRUxFTkJRVW9zUTBGQlVTeExRVUZTTEVOQlFXTXNUMEZCWkN4SFFVRjNRaXhQUVVGNFFqdEJRVU5CTEVWQlFVRXNTVUZCU1N4RFFVRkRMRU5CUVVRc1EwRkJTaXhEUVVGUkxFdEJRVklzUTBGQll5eFBRVUZrTEVkQlFYZENMRTlCUVhoQ08wRkJRMEVzUlVGQlFTeExRVUZMTEVOQlFVTXNRMEZCUkN4RFFVRk1MRU5CUVZNc1UwRkJWQ3hEUVVGdFFpeEhRVUZ1UWl4RFFVRjFRaXhSUVVGMlFqdEJRVU5CTEVWQlFVRXNTMEZCU3l4RFFVRkRMRU5CUVVRc1EwRkJUQ3hEUVVGVExGTkJRVlFzUTBGQmJVSXNSMEZCYmtJc1EwRkJkVUlzWTBGQmRrSTdRVUZGU0RzN1FVRkRSQ3hYUVVGWE8wRkJRMWdzVjBGQlZ5eERRVUZGTEVOQlFVWXNRMEZCV0R0QlFVTkJMRmRCUVZjc1EwRkJReXhuUWtGQldpeERRVUUyUWl4UFFVRTNRaXhGUVVGelF5eFpRVUZOTzBGQlF6VkRMRTFCUVUwc1RVRkJUU3hIUVVGSExFdEJRVXNzUTBGQlF5eE5RVUZ5UWpzN1FVRkRRU3hOUVVGSkxFMUJRVTBzU1VGQlNTeE5RVUZOTEVOQlFVTXNVMEZCVUN4RFFVRnBRaXhSUVVGcVFpeERRVUV3UWl4eFFrRkJNVUlzUTBGQlpDeEZRVUZuUlR0QlFVTTFSQ3hKUVVGQkxFdEJRVXNzUTBGQlF5eFBRVUZPTEVOQlFXZENMRlZCUVVNc1NVRkJSQ3hGUVVGUExFTkJRVkFzUlVGQllUdEJRVU42UWl4VlFVRkpMRTFCUVUwc1MwRkJTeXhKUVVGbUxFVkJRWEZDTzBGQlEycENMRkZCUVVFc1YwRkJWenRCUVVOWUxGRkJRVUVzVjBGQlZ5eERRVUZGTEVOQlFVWXNRMEZCV0R0QlFVTklPMEZCUTBvc1MwRk1SRHRCUVUxSU8wRkJRMG9zUTBGV1J5eEZMRU5CVjBvN08wRkJRMEVzU1VGQlRTeFBRVUZQTEVkQlFVY3NVVUZCVVN4RFFVRkRMR2RDUVVGVUxFTkJRVEJDTEcxRFFVRXhRaXhEUVVGb1FqdEJRVU5CTEVsQlFVMHNTVUZCU1N4SFFVRkhMRkZCUVZFc1EwRkJReXhoUVVGVUxFTkJRWFZDTEU5QlFYWkNMRU5CUVdJN1FVRkRRU3hKUVVGTkxFbEJRVWtzUjBGQlJ5eFJRVUZSTEVOQlFVTXNZVUZCVkN4RFFVRjFRaXhQUVVGMlFpeERRVUZpTzBGQlEwRXNTVUZCU1N4VlFVRlZMRWRCUVVjc1EwRkJha0k3UVVGSFFTeFRRVUZUTEVOQlFVTXNWVUZCUkN4RFFVRlVPenRCUVVWUkxGTkJRVk1zVTBGQlZDeERRVUZ2UWl4RFFVRndRaXhGUVVGMVFqdEJRVU51UWl4TlFVRkpMRU5CUVVNc1IwRkJSeXhQUVVGUExFTkJRVU1zVFVGQmFFSXNSVUZCZDBJN1FVRkRjRUlzU1VGQlFTeFZRVUZWTEVkQlFVY3NRMEZCWWp0QlFVTklPenRCUVVORUxFMUJRVWtzUTBGQlF5eEhRVUZETEVOQlFVNHNSVUZCVXp0QlFVTk1MRWxCUVVFc1ZVRkJWU3hIUVVGSExFOUJRVThzUTBGQlF5eE5RVUZ5UWp0QlFVTklPenRCUVVORUxFVkJRVUVzVDBGQlR5eERRVUZETEU5QlFWSXNRMEZCYVVJc1ZVRkJRU3hKUVVGSk8wRkJRVUVzVjBGQlNTeEpRVUZKTEVOQlFVTXNTMEZCVEN4RFFVRlhMRTlCUVZnc1IwRkJjVUlzVFVGQmVrSTdRVUZCUVN4SFFVRnlRanRCUVVWQkxFVkJRVUVzVDBGQlR5eERRVUZETEZWQlFWVXNSMEZCUXl4RFFVRmFMRU5CUVZBc1EwRkJjMElzUzBGQmRFSXNRMEZCTkVJc1QwRkJOVUlzUjBGQmMwTXNSVUZCZEVNN1FVRkRTRHM3UVVGRFJDeFRRVUZUTEZWQlFWUXNRMEZCYjBJc1EwRkJjRUlzUlVGQmRVSTdRVUZEZEVJc1JVRkJRU3hUUVVGVExFTkJRVU1zVlVGQlZTeEpRVUZITEVOQlFXUXNRMEZCVkR0QlFVTkJPenRCUVVORUxFbEJRVWtzUTBGQlF5eG5Ra0ZCVEN4RFFVRjFRaXhQUVVGMlFpeEZRVUZuUXl4WlFVRk5PMEZCUTI1RExFVkJRVUVzVlVGQlZTeERRVUZETEVOQlFVTXNRMEZCUml4RFFVRldPMEZCUTBZc1EwRkdSRHRCUVVkQkxFbEJRVWtzUTBGQlF5eG5Ra0ZCVEN4RFFVRjFRaXhQUVVGMlFpeEZRVUZuUXl4WlFVRk5PMEZCUTNCRExFVkJRVUVzVlVGQlZTeERRVUZETEVOQlFVUXNRMEZCVmp0QlFVTkVMRU5CUmtRc1JTeERRVWRCTzBGQlJVRTdPMEZCUlVvc1NVRkJUU3hWUVVGVkxFZEJRVWNzVVVGQlVTeERRVUZETEdGQlFWUXNRMEZCZFVJc1pVRkJka0lzUTBGQmJrSTdRVUZCUVN4SlFVTlJMRkZCUVZFc1IwRkJSeXhSUVVGUkxFTkJRVU1zWVVGQlZDeERRVUYzUWl3d1FrRkJlRUlzUTBGRWJrSTdRVUZGU0N4UlFVRlJPenRCUVVOTUxGTkJRVk1zVVVGQlZDeEhRVUZ2UWp0QlFVTm9RaXhGUVVGQkxGVkJRVlVzUTBGQlF5eG5Ra0ZCV0N4RFFVRTBRaXhQUVVFMVFpeEZRVUZ4UXl4WlFVRk5PMEZCUTNoRExGRkJRVTBzVTBGQlV5eEhRVUZITEUxQlFVMHNRMEZCUXl4blFrRkJVQ3hEUVVGM1FpeFJRVUY0UWl4RFFVRnNRanM3UVVGRlFTeFJRVUZKTEZOQlFWTXNRMEZCUXl4UFFVRldMRXRCUVhOQ0xFMUJRVEZDTEVWQlFXdERPMEZCUXpsQ0xFMUJRVUVzVVVGQlVTeERRVUZETEV0QlFWUXNRMEZCWlN4UFFVRm1MRWRCUVhsQ0xFOUJRWHBDTzBGQlEwZ3NTMEZHUkN4TlFVVk5PMEZCUTB3c1RVRkJRU3hSUVVGUkxFTkJRVU1zUzBGQlZDeERRVUZsTEU5QlFXWXNSMEZCZVVJc1RVRkJla0k3UVVGRFFUdEJRVU5JTEVkQlVrUTdRVUZUUVN4RlFVRkJMRkZCUVZFc1EwRkJReXhuUWtGQlZDeERRVUV3UWl4UFFVRXhRaXhGUVVGdFF5eFpRVUZOTzBGQlEzSkRMRWxCUVVFc1VVRkJVU3hEUVVGRExFdEJRVlFzUTBGQlpTeFBRVUZtTEVkQlFYbENMRTFCUVhwQ08wRkJSVWdzUjBGSVJEdEJRVWxJTEVNc1EwRkJRenM3TzBGQlJVWXNTVUZCVFN4TlFVRk5MRWRCUVVjc1IwRkJaanRCUVVOQkxFbEJRVTBzVVVGQlVTeEhRVUZITEZGQlFWRXNRMEZCUXl4aFFVRlVMRU5CUVhWQ0xIbENRVUYyUWl4RFFVRnFRanRCUVVOQkxFbEJRVTBzWlVGQlpTeEhRVUZITEZGQlFWRXNRMEZCUXl4aFFVRlVMRU5CUVhWQ0xHMURRVUYyUWl4RFFVRjRRanRCUVVOQkxFbEJRVTBzVlVGQlZTeEhRVUZITEdWQlFXVXNRMEZCUXl4alFVRm9RaXhGUVVGdVFqczdRVUZEUVN4SlFVRk5MRTFCUVUwc1IwRkJSeXhUUVVGVUxFMUJRVk03UVVGQlFTeFRRVUZOTEUxQlFVMHNRMEZCUXl4WFFVRlFMRWxCUVhOQ0xGRkJRVkVzUTBGQlF5eGxRVUZVTEVOQlFYbENMRk5CUVhKRU8wRkJRVUVzUTBGQlpqczdRVUZGUVN4bFFVRmxMRU5CUVVNc1MwRkJhRUlzUTBGQmMwSXNaVUZCZEVJc1lVRkJNa01zVlVGQk0wTXNZMEZCZVVRc1ZVRkJla1E3UVVGRFFTeGxRVUZsTEVOQlFVTXNTMEZCYUVJc1EwRkJjMElzVlVGQmRFSXNSMEZCYlVNc2QwSkJRVzVETEVNc1EwRkZRVHM3UVVGRFFTeEpRVUZOTEdkQ1FVRm5RaXhIUVVGSExGTkJRVzVDTEdkQ1FVRnRRaXhIUVVGTk8wRkJRek5DTEUxQlFVMHNUVUZCVFN4SFFVRkhMRkZCUVZFc1EwRkJReXhsUVVGVUxFTkJRWGxDTEZsQlFYcENMRWRCUVhkRExFMUJRVTBzUTBGQlF5eFhRVUU1UkR0QlFVTkJMRTFCUVUwc1ZVRkJWU3hIUVVGSExGVkJRVlVzUjBGQlNTeE5RVUZOTEV0QlFVY3NWVUZCVkN4SFFVRnZRaXhOUVVGeVJEdEJRVU5CTEVWQlFVRXNaVUZCWlN4RFFVRkRMRXRCUVdoQ0xFTkJRWE5DTEdkQ1FVRjBRaXhIUVVGNVF5eFZRVUY2UXp0QlFVTklMRU5CU2tRc1F5eERRVXRCT3pzN1FVRkRRU3hOUVVGTkxFTkJRVU1zWjBKQlFWQXNRMEZCZDBJc1VVRkJlRUlzUlVGQmEwTXNXVUZCVFR0QlFVTndReXhGUVVGQkxHZENRVUZuUWpzN1FVRkRhRUlzVFVGQlN5eE5RVUZOTEV0QlFVc3NUVUZCYUVJc1JVRkJkMEk3UVVGRGNFSXNTVUZCUVN4UlFVRlJMRU5CUVVNc1UwRkJWQ3hEUVVGdFFpeEhRVUZ1UWl4RFFVRjFRaXhuUTBGQmRrSTdRVUZEU0N4SFFVWkVMRTFCUlU4N1FVRkRTQ3hKUVVGQkxGRkJRVkVzUTBGQlF5eFRRVUZVTEVOQlFXMUNMRTFCUVc1Q0xFTkJRVEJDTEdkRFFVRXhRanRCUVVOSU8wRkJRMGtzUTBGUVZDeEZMRU5CVVVFN08wRkJRMEVzVVVGQlVTeERRVUZETEdkQ1FVRlVMRU5CUVRCQ0xFOUJRVEZDTEVWQlFXMURMRmxCUVUwN1FVRkRla01zUlVGQlFTeE5RVUZOTEVOQlFVTXNVVUZCVUN4RFFVRnBRanRCUVVOcVFpeEpRVUZCTEVkQlFVY3NSVUZCUXl4RFFVUmhPMEZCUldwQ0xFbEJRVUVzVVVGQlVTeEZRVUZGTzBGQlJrOHNSMEZCYWtJN1FVRkpReXhEUVV4RU8wRkJUVUVzWjBKQlFXZENMRWNzUTBGRmFFSTdPMEZCUlVFc1NVRkJUU3hIUVVGSExFZEJRVWNzVVVGQlVTeERRVUZETEdGQlFWUXNRMEZCZFVJc2NVSkJRWFpDTEVOQlFWbzdRVUZCUVN4SlFVTkxMRWRCUVVjc1IwRkJTU3hSUVVGUkxFTkJRVU1zWVVGQlZDeERRVUYxUWl4blFrRkJka0lzUTBGRVdqdEJRVUZCTEVsQlJVc3NVVUZCVVN4SFFVRkhMRTFCUVUwc1EwRkJReXhuUWtGQlVDeERRVUYzUWl4SFFVRjRRaXhEUVVab1FqdEJRVUZCTEVsQlIwc3NVVUZCVVN4SFFVRkhMRTFCUVUwc1EwRkJReXhuUWtGQlVDeERRVUYzUWl4SFFVRjRRaXhEUVVob1FqdEJRVXRMTEVkQlFVY3NRMEZCUXl4blFrRkJTaXhEUVVGeFFpeFBRVUZ5UWl4RlFVRTJRaXhaUVVGTk8wRkJRMmhETEVWQlFVRXNSMEZCUnl4RFFVRkRMRk5CUVVvc1EwRkJZeXhOUVVGa0xFTkJRWEZDTEhWQ1FVRnlRanM3UVVGRFFTeE5RVUZKTEZGQlFWRXNRMEZCUXl4WlFVRlVMRXRCUVRCQ0xFdEJRVGxDTEVWQlFYRkRPMEZCUTJwRExFbEJRVUVzUjBGQlJ5eERRVUZETEV0QlFVb3NRMEZCVlN4WlFVRldMRWRCUVhsQ0xFOUJRWHBDTzBGQlEwZ3NSMEZHUkN4TlFVVk5PMEZCUTBZc1NVRkJRU3hIUVVGSExFTkJRVU1zUzBGQlNpeERRVUZWTEZsQlFWWXNSMEZCZVVJc1MwRkJla0k3UVVGRFNEczdRVUZEUkN4TlFVRkpMRkZCUVZFc1EwRkJReXhaUVVGVUxFdEJRVEJDTEV0QlFUbENMRVZCUVhGRE8wRkJRMnBETEVsQlFVRXNSMEZCUnl4RFFVRkRMRXRCUVVvc1EwRkJWU3haUVVGV0xFZEJRWGxDTEUxQlFYcENPMEZCUTBnc1IwRkdSQ3hOUVVWTk8wRkJRMFlzU1VGQlFTeEhRVUZITEVOQlFVTXNTMEZCU2l4RFFVRlZMRmxCUVZZc1IwRkJlVUlzUzBGQmVrSTdRVUZEU0R0QlFVTklMRU5CV2tRc1JTeERRV05CT3p0QlFVVkJMRWxCUVUwc1VVRkJVU3hIUVVGSExGRkJRVkVzUTBGQlF5eGhRVUZVTEVOQlFYZENMRWxCUVhoQ0xFTkJRV3BDTzBGQlEwRXNTVUZCVFN4SlFVRkpMRWRCUVVjc1VVRkJVU3hEUVVGRExHVkJRWFJDT3p0QlFVVlVMRWxCUVVrc1dVRkJXU3hEUVVGRExFOUJRV0lzUTBGQmNVSXNWMEZCY2tJc1RVRkJjME1zVFVGQk1VTXNSVUZCYTBRN1FVRkRPVU1zUlVGQlFTeFJRVUZSTEVOQlFVTXNUMEZCVkN4SFFVRnRRaXhKUVVGdVFqdEJRVU5CTEVWQlFVRXNTVUZCU1N4RFFVRkRMRXRCUVV3c1EwRkJWeXhYUVVGWUxFTkJRWFZDTEdsRFFVRjJRaXhGUVVFd1JDeHpRa0ZCTVVRN1FVRkRRU3hGUVVGQkxFbEJRVWtzUTBGQlF5eExRVUZNTEVOQlFWY3NWMEZCV0N4RFFVRjFRaXd5UWtGQmRrSXNSVUZCYjBRc2MwSkJRWEJFTzBGQlEwRXNSVUZCUVN4SlFVRkpMRU5CUVVNc1MwRkJUQ3hEUVVGWExGZEJRVmdzUTBGQmRVSXNiMEpCUVhaQ0xFVkJRVFpETEZOQlFUZERPMEZCUTBFc1JVRkJRU3hKUVVGSkxFTkJRVU1zUzBGQlRDeERRVUZYTEZkQlFWZ3NRMEZCZFVJc2IwSkJRWFpDTEVWQlFUWkRMRk5CUVRkRE8wRkJRMGdzUTBGT1JDeE5RVTFOTzBGQlEwWXNSVUZCUVN4UlFVRlJMRU5CUVVNc1QwRkJWQ3hIUVVGdFFpeExRVUZ1UWp0QlFVTkJMRVZCUVVFc1NVRkJTU3hEUVVGRExFdEJRVXdzUTBGQlZ5eFhRVUZZTEVOQlFYVkNMR2xEUVVGMlFpeEZRVUV3UkN4blFrRkJNVVE3UVVGRFFTeEZRVUZCTEVsQlFVa3NRMEZCUXl4TFFVRk1MRU5CUVZjc1YwRkJXQ3hEUVVGMVFpd3lRa0ZCZGtJc1JVRkJiMFFzWjBKQlFYQkVPMEZCUTBFc1JVRkJRU3hKUVVGSkxFTkJRVU1zUzBGQlRDeERRVUZYTEZkQlFWZ3NRMEZCZFVJc2IwSkJRWFpDTEVWQlFUWkRMRk5CUVRkRE8wRkJRMEVzUlVGQlFTeEpRVUZKTEVOQlFVTXNTMEZCVEN4RFFVRlhMRmRCUVZnc1EwRkJkVUlzYjBKQlFYWkNMRVZCUVRaRExGTkJRVGRETzBGQlEwZzdPMEZCUlZFc1VVRkJVU3hEUVVGRExHZENRVUZVTEVOQlFUQkNMRTlCUVRGQ0xFVkJRVzFETEZsQlFVMDdRVUZEZEVNc1RVRkJTU3haUVVGWkxFTkJRVU1zVDBGQllpeERRVUZ4UWl4WFFVRnlRaXhOUVVGelF5eE5RVUV4UXl4RlFVRnBSRHRCUVVNMVF5eEpRVUZCTEZsQlFWa3NRMEZCUXl4UFFVRmlMRU5CUVhGQ0xGZEJRWEpDTEVWQlFXdERMRXRCUVd4RE8wRkJRMEVzU1VGQlFTeEpRVUZKTEVOQlFVTXNTMEZCVEN4RFFVRlhMRmRCUVZnc1EwRkJkVUlzYVVOQlFYWkNMRVZCUVRCRUxHZENRVUV4UkR0QlFVTkJMRWxCUVVFc1NVRkJTU3hEUVVGRExFdEJRVXdzUTBGQlZ5eFhRVUZZTEVOQlFYVkNMREpDUVVGMlFpeEZRVUZ2UkN4blFrRkJjRVE3UVVGRFFTeEpRVUZCTEVsQlFVa3NRMEZCUXl4TFFVRk1MRU5CUVZjc1YwRkJXQ3hEUVVGMVFpeHZRa0ZCZGtJc1JVRkJOa01zVTBGQk4wTTdRVUZEUVN4SlFVRkJMRWxCUVVrc1EwRkJReXhMUVVGTUxFTkJRVmNzVjBGQldDeERRVUYxUWl4dlFrRkJka0lzUlVGQk5rTXNVMEZCTjBNN1FVRkRRU3hKUVVGQkxFOUJRVThzUTBGQlF5eEhRVUZTTEVOQlFWa3NUMEZCV2p0QlFVTktMRWRCVUVRc1RVRlBUenRCUVVOSUxFbEJRVUVzV1VGQldTeERRVUZETEU5QlFXSXNRMEZCY1VJc1YwRkJja0lzUlVGQmEwTXNTVUZCYkVNN1FVRkRRU3hKUVVGQkxFbEJRVWtzUTBGQlF5eExRVUZNTEVOQlFWY3NWMEZCV0N4RFFVRjFRaXhwUTBGQmRrSXNSVUZCTUVRc2MwSkJRVEZFTzBGQlEwRXNTVUZCUVN4SlFVRkpMRU5CUVVNc1MwRkJUQ3hEUVVGWExGZEJRVmdzUTBGQmRVSXNNa0pCUVhaQ0xFVkJRVzlFTEhOQ1FVRndSRHRCUVVOQkxFbEJRVUVzU1VGQlNTeERRVUZETEV0QlFVd3NRMEZCVnl4WFFVRllMRU5CUVhWQ0xHOUNRVUYyUWl4RlFVRTJReXhUUVVFM1F6dEJRVU5CTEVsQlFVRXNTVUZCU1N4RFFVRkRMRXRCUVV3c1EwRkJWeXhYUVVGWUxFTkJRWFZDTEc5Q1FVRjJRaXhGUVVFMlF5eFRRVUUzUXp0QlFVTklPMEZCUTBnc1EwRm1SQ3hGTEVOQmFVSkJPenRCUVVWQkxFbEJRVTBzVFVGQlRTeEhRVUZITEZGQlFWRXNRMEZCUXl4blFrRkJWQ3hEUVVFeVFpd3dRa0ZCTTBJc1EwRkJaanRCUVVGQkxFbEJRMDhzVDBGQlR5eEhRVUZITEZGQlFWRXNRMEZCUXl4aFFVRlVMRU5CUVhkQ0xHMUNRVUY0UWl4RFFVUnFRanRCUVVWQkxFbEJRVWtzVDBGQlR5eEhRVUZITEVOQlFXUTdRVUZCUVN4SlFVRnBRaXhoUVVGcVFqdEJRVUZCTEVsQlFXZERMRWxCUVdoRE8wRkJSVUVzWVVGQllTeEhRVUZITEU5QlFVOHNRMEZCUXl4WFFVRjRRanRCUVVOR0xFMUJRVTBzUTBGQlF5eFBRVUZRTEVOQlFXZENMRlZCUVVFc1MwRkJTeXhGUVVGTE8wRkJRM3BDTEVWQlFVRXNUMEZCVHl4SFFVRkhMRTlCUVU4c1IwRkJSeXhMUVVGTExFTkJRVU1zVjBGQk1VSTdRVUZEUVN4RFFVWkVPMEZCUjBNc1NVRkJTU3hIUVVGSExFbEJRVWtzUTBGQlF5eExRVUZNTEVOQlFWY3NRMEZCUXl4aFFVRmhMRWRCUVVNc1QwRkJaaXhKUVVGM1FpeERRVUZ1UXl4RFFVRlFPMEZCUTBFc1NVRkJTU3hEUVVGRExFdEJRVXdzUTBGQlZ5eFhRVUZZTEVOQlFYVkNMR3RDUVVGMlFpeFpRVUU0UXl4SlFVRTVReUlzSW1acGJHVWlPaUpuWlc1bGNtRjBaV1F1YW5NaUxDSnpiM1Z5WTJWU2IyOTBJam9pSWl3aWMyOTFjbU5sYzBOdmJuUmxiblFpT2xzaUtHWjFibU4wYVc5dUtDbDdablZ1WTNScGIyNGdjaWhsTEc0c2RDbDdablZ1WTNScGIyNGdieWhwTEdZcGUybG1LQ0Z1VzJsZEtYdHBaaWdoWlZ0cFhTbDdkbUZ5SUdNOVhDSm1kVzVqZEdsdmJsd2lQVDEwZVhCbGIyWWdjbVZ4ZFdseVpTWW1jbVZ4ZFdseVpUdHBaaWdoWmlZbVl5bHlaWFIxY200Z1l5aHBMQ0V3S1R0cFppaDFLWEpsZEhWeWJpQjFLR2tzSVRBcE8zWmhjaUJoUFc1bGR5QkZjbkp2Y2loY0lrTmhibTV2ZENCbWFXNWtJRzF2WkhWc1pTQW5YQ0lyYVN0Y0lpZGNJaWs3ZEdoeWIzY2dZUzVqYjJSbFBWd2lUVTlFVlV4RlgwNVBWRjlHVDFWT1JGd2lMR0Y5ZG1GeUlIQTlibHRwWFQxN1pYaHdiM0owY3pwN2ZYMDdaVnRwWFZzd1hTNWpZV3hzS0hBdVpYaHdiM0owY3l4bWRXNWpkR2x2YmloeUtYdDJZWElnYmoxbFcybGRXekZkVzNKZE8zSmxkSFZ5YmlCdktHNThmSElwZlN4d0xIQXVaWGh3YjNKMGN5eHlMR1VzYml4MEtYMXlaWFIxY200Z2JsdHBYUzVsZUhCdmNuUnpmV1p2Y2loMllYSWdkVDFjSW1aMWJtTjBhVzl1WENJOVBYUjVjR1Z2WmlCeVpYRjFhWEpsSmlaeVpYRjFhWEpsTEdrOU1EdHBQSFF1YkdWdVozUm9PMmtyS3lsdktIUmJhVjBwTzNKbGRIVnliaUJ2ZlhKbGRIVnliaUJ5ZlNrb0tTSXNJaTh2WTJGeVpITWdYSEpjYm1OdmJuTjBJR05oY21SeklEMGdaRzlqZFcxbGJuUXVjWFZsY25sVFpXeGxZM1J2Y2tGc2JDZ25Mbk5sY25acGMyVnpYMTkwWVdKZlgybDBaVzBuS1N4Y2NseHVJQ0FnSUNBZ0lDQjBaWGgwSUQwZ1pHOWpkVzFsYm5RdWNYVmxjbmxUWld4bFkzUnZja0ZzYkNnbkxuTmxjblpwYzJWelgxOTBZV0pmWDJsMFpXMWZYM1JsZUhRbktTeGNjbHh1SUNBZ0lDQWdJQ0JzYVc1cklEMGdaRzlqZFcxbGJuUXVjWFZsY25sVFpXeGxZM1J2Y2tGc2JDZ25Mbk5sY25acGMyVnpYMTlzYVc1ckxXMXZjbVVuS1N3Z1hISmNiaUFnSUNBZ0lDQWdkR2wwYkdVZ1BTQmtiMk4xYldWdWRDNXhkV1Z5ZVZObGJHVmpkRzl5UVd4c0tDY3VjMlZ5ZG1selpYTmZYM1JoWWw5ZmFYUmxiVjlmZEdsMGJHVW5LU3hjY2x4dUlDQWdJQ0FnSUNCallYSmtjMUJoY21WdWRDQTlJR1J2WTNWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNJb0p5NXpaWEoyYVhObGMxOWZkR0ZpSnlrN1hISmNibHh5WEc0Z0lDQWdablZ1WTNScGIyNGdhR2xrWlVOdmJuUmxiblFnS0NrZ2UxeHlYRzRnSUNBZ0lDQWdJSFJsZUhRdVptOXlSV0ZqYUNBb2FYUmxiU0E5UGlCN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsMFpXMHVjM1I1YkdVdVpHbHpjR3hoZVNBOUlDZHViMjVsSnp0Y2NseHVYSEpjYmlBZ0lDQWdJQ0FnZlNrN1hISmNiaUFnSUNBZ0lDQWdiR2x1YXk1bWIzSkZZV05vSUNocGRHVnRJRDArSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVhSbGJTNXpkSGxzWlM1a2FYTndiR0Y1SUQwZ0oyNXZibVVuTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JjY2x4dUlDQWdJQ0FnSUNCOUtUdGNjbHh1SUNBZ0lDQWdJQ0JqWVhKa2N5NW1iM0pGWVdOb0lDaHBkR1Z0SUQwK0lIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FYUmxiUzVqYkdGemMweHBjM1F1Y21WdGIzWmxLQ2RoWTNScGRtVW5LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdYSEpjYmlBZ0lDQWdJQ0FnZlNrN1hISmNiaUFnSUNBZ0lDQWdkR2wwYkdVdVptOXlSV0ZqYUNocGRHVnRJRDArSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVhSbGJTNWpiR0Z6YzB4cGMzUXVjbVZ0YjNabEtDZGhZM1JwZG1WZmRHbDBiR1VuS1R0Y2NseHVJQ0FnSUNBZ0lDQjlLVHRjY2x4dUlDQWdJSDFjY2x4dUlDQWdJR1oxYm1OMGFXOXVJSE5vYjNkRGIyNTBaVzUwSUNocEtTQjdYSEpjYmlBZ0lDQWdJQ0FnZEdWNGRGdHBYUzV6ZEhsc1pTNWthWE53YkdGNUlEMGdKMkpzYjJOckp6dGNjbHh1SUNBZ0lDQWdJQ0JzYVc1clcybGRMbk4wZVd4bExtUnBjM0JzWVhrZ1BTQW5ZbXh2WTJzbk8xeHlYRzRnSUNBZ0lDQWdJR05oY21SelcybGRMbU5zWVhOelRHbHpkQzVoWkdRb0oyRmpkR2wyWlNjcE8xeHlYRzRnSUNBZ0lDQWdJSFJwZEd4bFcybGRMbU5zWVhOelRHbHpkQzVoWkdRb0oyRmpkR2wyWlY5MGFYUnNaU2NwTzF4eVhHNWNjbHh1SUNBZ0lIMWNjbHh1SUNBZ0lHaHBaR1ZEYjI1MFpXNTBJQ2dwTzF4eVhHNGdJQ0FnYzJodmQwTnZiblJsYm5RZ0tEQXBPMXh5WEc0Z0lDQWdZMkZ5WkhOUVlYSmxiblF1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWduWTJ4cFkyc25MQ0FvS1NBOVBpQjdYSEpjYmlBZ0lDQmpiMjV6ZENCMFlYSm5aWFFnUFNCbGRtVnVkQzUwWVhKblpYUTdYSEpjYmlBZ0lDQnBaaUFvZEdGeVoyVjBJQ1ltSUhSaGNtZGxkQzVqYkdGemMweHBjM1F1WTI5dWRHRnBibk1vSjNObGNuWnBjMlZ6WDE5MFlXSmZYMmwwWlcwbktTa2dlMXh5WEc0Z0lDQWdJQ0FnSUdOaGNtUnpMbVp2Y2tWaFkyZ2dLQ0FvYVhSbGJTd2dhU2tnUFQ0Z2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCcFppQW9kR0Z5WjJWMElEMDlQU0JwZEdWdEtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JvYVdSbFEyOXVkR1Z1ZENBb0tUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSE5vYjNkRGIyNTBaVzUwSUNocEtUc2dYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0I5S1R0Y2NseHVJQ0FnSUgxY2NseHVmU2s3WEhKY2JpOHZjMnhwWkdWeVhISmNibU52Ym5OMElITnNhV1JsY25NZ1BTQmtiMk4xYldWdWRDNXhkV1Z5ZVZObGJHVmpkRzl5UVd4c0tDY3VkR1Z6ZEdsdGIyNXBZV3h6WDE5emJHbGtaWEl0YVhSbGJYTmZYMmwwWlcwbktUdGNjbHh1WTI5dWMzUWdjSEpsZGlBOUlHUnZZM1Z0Wlc1MExuRjFaWEo1VTJWc1pXTjBiM0lvSnk1d2NtVjJKeWs3WEhKY2JtTnZibk4wSUc1bGVIUWdQU0JrYjJOMWJXVnVkQzV4ZFdWeWVWTmxiR1ZqZEc5eUtDY3VibVY0ZENjcE8xeHlYRzVzWlhRZ2MyeHBaR1ZKYm1SbGVDQTlJREU3WEhKY2JseHlYRzVjY2x4dWMyaHZkMU5zYVdSbEtITnNhV1JsU1c1a1pYZ3BPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQm1kVzVqZEdsdmJpQnphRzkzVTJ4cFpHVWdLRzRwSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVdZZ0tHNGdQaUJ6Ykdsa1pYSnpMbXhsYm1kMGFDa2dlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYzJ4cFpHVkpibVJsZUNBOUlERTdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLRzQ4TVNrZ2UxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjMnhwWkdWSmJtUmxlQ0E5SUhOc2FXUmxjbk11YkdWdVozUm9PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lITnNhV1JsY25NdVptOXlSV0ZqYUNBb2FYUmxiU0E5UGlCcGRHVnRMbk4wZVd4bExtUnBjM0JzWVhrZ1BTQW5ibTl1WlNjcE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjMnhwWkdWeWMxdHpiR2xrWlVsdVpHVjRMVEZkTG5OMGVXeGxMbVJwYzNCc1lYa2dQU0FuSnp0Y2NseHVJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnWm5WdVkzUnBiMjRnY0d4MWMxTnNhV1JsY3lodUtTQjdYSEpjYmlBZ0lDQWdJQ0FnSUhOb2IzZFRiR2xrWlNoemJHbGtaVWx1WkdWNElDczliaWs3WEhKY2JpQWdJQ0FnSUNBZ2ZWeHlYRzRnSUNBZ0lDQWdJSEJ5WlhZdVlXUmtSWFpsYm5STWFYTjBaVzVsY2lBb0oyTnNhV05ySnl3Z0tDa2dQVDRnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJSEJzZFhOVGJHbGtaWE1vTFRFcE8xeHlYRzRnSUNBZ0lDQWdJSDBwTzF4eVhHNGdJQ0FnSUNBZ0lHNWxlSFF1WVdSa1JYWmxiblJNYVhOMFpXNWxjaUFvSjJOc2FXTnJKeXdnS0NrZ1BUNGdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ2NHeDFjMU5zYVdSbGN5Z3hLVHRjY2x4dUlDQWdJQ0FnSUNCOUtUdGNjbHh1SUNBZ0lDQWdJQ0F2THlCbGJtUWdjMnhwWkdWeVhISmNibHh5WEc0Z0lDQWdJQ0FnSUM4dlluVnlaMlZ5SUZ4eVhHNWNjbHh1SUNBZ0lHTnZibk4wSUdKMWNtZGxjazFsYm5VZ1BTQmtiMk4xYldWdWRDNXhkV1Z5ZVZObGJHVmpkRzl5S0NjdWFHVmhaR1Z5WDE5dFpXNTFKeWtzWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJRzFsYm5WSmRHVnRJRDBnWkc5amRXMWxiblF1Y1hWbGNubFRaV3hsWTNSdmNpQW9KeTV1WVhacFoyRjBhVzl1WDE5dFpXNTFMV0oxY21kbGNpY3BPMXh5WEc0Z2MyaHZkMDFsYm5VZ0tDazdYSEpjYmlBZ0lDQm1kVzVqZEdsdmJpQnphRzkzVFdWdWRTZ3BJSHRjY2x4dUlDQWdJQ0FnSUNCaWRYSm5aWEpOWlc1MUxtRmtaRVYyWlc1MFRHbHpkR1Z1WlhJb0oyTnNhV05ySnl3Z0tDa2dQVDRnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJR052Ym5OMElITjBlV3hsVFdWdWRTQTlJSGRwYm1SdmR5NW5aWFJEYjIxd2RYUmxaRk4wZVd4bEtHMWxiblZKZEdWdEtUdGNjbHh1WEhKY2JpQWdJQ0FnSUNBZ0lDQWdhV1lnS0hOMGVXeGxUV1Z1ZFM1a2FYTndiR0Y1SUQwOVBTQW5ibTl1WlNjcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdiV1Z1ZFVsMFpXMHVjM1I1YkdVdVpHbHpjR3hoZVNBOUlDZGliRzlqYXljN1hISmNiaUFnSUNBZ0lDQWdJQ0FnZldWc2MyVWdlMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRaVzUxU1hSbGJTNXpkSGxzWlM1a2FYTndiR0Y1SUQwZ0oyNXZibVVuTzF4eVhHNGdJQ0FnSUNBZ0lDQWdJSDFjY2x4dUlDQWdJQ0FnSUNCOUtUdGNjbHh1SUNBZ0lDQWdJQ0J0Wlc1MVNYUmxiUzVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ2RqYkdsamF5Y3NJQ2dwSUQwK0lIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2JXVnVkVWwwWlcwdWMzUjViR1V1WkdsemNHeGhlU0E5SUNkdWIyNWxKenRjY2x4dVhISmNiaUFnSUNBZ0lDQWdmU2s3SUNBZ0lDQWdJQ0JjY2x4dUlDQWdJSDBnTHk4Z1pXNWtJR0oxY21kbGNpQnRaVzUxWEhKY2JseHlYRzRnSUNBZ1kyOXVjM1FnYjJabWMyVjBJRDBnTVRBd08xeHlYRzRnSUNBZ1kyOXVjM1FnYzJOeWIyeHNWWEFnUFNCa2IyTjFiV1Z1ZEM1eGRXVnllVk5sYkdWamRHOXlLQ2N1YldGcGJpMXpZM0psWlc1ZlgzTmpjbTlzYkMxMWNDY3BPMXh5WEc0Z0lDQWdZMjl1YzNRZ2MyTnliMnhzVlhCVGRtZFFZWFJvSUQwZ1pHOWpkVzFsYm5RdWNYVmxjbmxUWld4bFkzUnZjaWduTG0xaGFXNHRjMk55WldWdVgxOXpZM0p2Ykd3dGRYQmZYM04yWnkxd1lYUm9KeWs3WEhKY2JpQWdJQ0JqYjI1emRDQndZWFJvVEdWdVozUm9JRDBnYzJOeWIyeHNWWEJUZG1kUVlYUm9MbWRsZEZSdmRHRnNUR1Z1WjNSb0tDazdYSEpjYmlBZ0lDQmpiMjV6ZENCblpYUlViM0FnUFNBb0tTQTlQaUIzYVc1a2IzY3VjR0ZuWlZsUFptWnpaWFFnZkh3Z1pHOWpkVzFsYm5RdVpHOWpkVzFsYm5SRmJHVnRaVzUwTG5OamNtOXNiRlJ2Y0R0Y2NseHVYSEpjYmlBZ0lDQnpZM0p2Ykd4VmNGTjJaMUJoZEdndWMzUjViR1V1YzNSeWIydGxSR0Z6YUdGeWNtRjVJRDBnWUNSN2NHRjBhRXhsYm1kMGFIMGdKSHR3WVhSb1RHVnVaM1JvZldBN1hISmNiaUFnSUNCelkzSnZiR3hWY0ZOMloxQmhkR2d1YzNSNWJHVXVkSEpoYm5OcGRHbHZiaUE5SUNkemRISnZhMlV0WkdGemFHOW1abk5sZENBeU1HMXpKenRjY2x4dVhISmNiaUFnSUNBdkx5QjFjR1JoZEdVZ1pHRnphQ0J2Wm1aelpYUmNjbHh1SUNBZ0lHTnZibk4wSUhWd1pHRjBaVVJoYzJoUFptWnpaWFFnUFNBb0tTQTlQaUI3WEhKY2JpQWdJQ0FnSUNBZ1kyOXVjM1FnYUdWcFoyaDBJRDBnWkc5amRXMWxiblF1Wkc5amRXMWxiblJGYkdWdFpXNTBMbk5qY205c2JFaGxhV2RvZENBdElIZHBibVJ2ZHk1cGJtNWxja2hsYVdkb2REdGNjbHh1SUNBZ0lDQWdJQ0JqYjI1emRDQmtZWE5vYjJabWMyVjBJRDBnY0dGMGFFeGxibWQwYUNBdElDaG5aWFJVYjNBb0tTcHdZWFJvVEdWdVozUm9MMmhsYVdkb2RDazdYSEpjYmlBZ0lDQWdJQ0FnYzJOeWIyeHNWWEJUZG1kUVlYUm9Mbk4wZVd4bExuTjBjbTlyWlVSaGMyaHZabVp6WlhRZ1BTQmtZWE5vYjJabWMyVjBPMXh5WEc0Z0lDQWdmVHRjY2x4dUlDQWdJQzh2YjI1elkzSnZiR3hjY2x4dUlDQWdJSGRwYm1SdmR5NWhaR1JGZG1WdWRFeHBjM1JsYm1WeUtDZHpZM0p2Ykd3bkxDQW9LU0E5UGlCN1hISmNiaUFnSUNBZ0lDQWdkWEJrWVhSbFJHRnphRTltWm5ObGRDZ3BPMXh5WEc0Z0lDQWdJQ0FnSUdsbUlDZ2daMlYwVkc5d0tDa2dQaUJ2Wm1aelpYUXBJSHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdjMk55YjJ4c1ZYQXVZMnhoYzNOTWFYTjBMbUZrWkNnbmJXRnBiaTF6WTNKbFpXNWZYM05qY205c2JDMTFjQzB0WVdOMGFYWmxKeWs3WEhKY2JpQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYzJOeWIyeHNWWEF1WTJ4aGMzTk1hWE4wTG5KbGJXOTJaU2duYldGcGJpMXpZM0psWlc1ZlgzTmpjbTlzYkMxMWNDMHRZV04wYVhabEp5azdJQ0JjY2x4dUlDQWdJQ0FnSUNCOVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUgwcE8xeHlYRzRnSUNBZ0x5OWpiR2xyWEhKY2JpQWdJQ0J6WTNKdmJHeFZjQzVoWkdSRmRtVnVkRXhwYzNSbGJtVnlLQ2RqYkdsamF5Y3NJQ2dwSUQwK0lIdGNjbHh1SUNBZ0lIZHBibVJ2ZHk1elkzSnZiR3hVYnlBb2UxeHlYRzRnSUNBZ2RHOXdPakFzWEhKY2JpQWdJQ0JpWldoaGRtbHZjam9nSjNOdGIyOTBhQ2RjY2x4dUlDQWdJQ0FnSUNCOUtUdGNjbHh1SUNBZ0lIMHBPMXh5WEc0Z0lDQWdkWEJrWVhSbFJHRnphRTltWm5ObGRDZ3BPMXh5WEc1Y2NseHVJQ0FnSUM4dllXTmpiM0prWlc5dUlGeHlYRzVjY2x4dUlDQWdJR052Ym5OMElHSjBiaUE5SUdSdlkzVnRaVzUwTG5GMVpYSjVVMlZzWldOMGIzSW9KeTVqYUdGeVoyVnlYMTloWTJOdmNtUmxiMjRuS1N4Y2NseHVJQ0FnSUNBZ0lDQWdkSGgwSUQwZ0lHUnZZM1Z0Wlc1MExuRjFaWEo1VTJWc1pXTjBiM0lvSnk1amFHRnlaMlZ5WDE5MFpYaDBKeWtzWEhKY2JpQWdJQ0FnSUNBZ0lITjBlV3hsUW5SdUlEMGdkMmx1Wkc5M0xtZGxkRU52YlhCMWRHVmtVM1I1YkdVb1luUnVLU3hjY2x4dUlDQWdJQ0FnSUNBZ2MzUjViR1ZVZUhRZ1BTQjNhVzVrYjNjdVoyVjBRMjl0Y0hWMFpXUlRkSGxzWlNoMGVIUXBPMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdZblJ1TG1Ga1pFVjJaVzUwVEdsemRHVnVaWElvSjJOc2FXTnJKeXdvS1NBOVBpQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUjRkQzVqYkdGemMweHBjM1F1ZEc5bloyeGxLQ2RqYUdGeVoyVnlYMTkwWlhoMExTMWhZM1JwZG1VbktUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FXWWdLSE4wZVd4bFFuUnVMbTFoY21kcGJrSnZkSFJ2YlNBOVBUMGdKekJ3ZUNjcElIdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJR0owYmk1emRIbHNaUzV0WVhKbmFXNUNiM1IwYjIwZ1BTQW5Nak01Y0hnbk95QmNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZXVnNjMlVnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1luUnVMbk4wZVd4bExtMWhjbWRwYmtKdmRIUnZiU0E5SUNjd2NIZ25PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2h6ZEhsc1pWUjRkQzV0WVhKbmFXNUNiM1IwYjIwZ1BUMDlJQ2N3Y0hnbktTQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0IwZUhRdWMzUjViR1V1YldGeVoybHVRbTkwZEc5dElEMGdKekl3Y0hnbk95QmNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZXVnNjMlVnZTF4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2RIaDBMbk4wZVd4bExtMWhjbWRwYmtKdmRIUnZiU0E5SUNjd2NIZ25PMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUgwcE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBZ0x5OTBhR1Z0WlNCemFYUmxJRnh5WEc0Z0lDQWdJQ0FnSUNCY2NseHVJQ0FnSUNBZ0lDQWdZMjl1YzNRZ1kyaGxZMnRpYjNnZ1BTQmtiMk4xYldWdWRDNXhkV1Z5ZVZObGJHVmpkRzl5SUNnbkxtd25LVHRjY2x4dUlDQWdJQ0FnSUNBZ1kyOXVjM1FnY205dmRDQTlJR1J2WTNWdFpXNTBMbVJ2WTNWdFpXNTBSV3hsYldWdWREdGNjbHh1WEhKY2JtbG1JQ2hzYjJOaGJGTjBiM0poWjJVdVoyVjBTWFJsYlNnbmFYTkRhR1ZqYTJWa0p5a2dQVDA5SUNkMGNuVmxKeWtnZTF4eVhHNGdJQ0FnWTJobFkydGliM2d1WTJobFkydGxaQ0E5SUhSeWRXVTdYSEpjYmlBZ0lDQnliMjkwTG5OMGVXeGxMbk5sZEZCeWIzQmxjblI1S0NjdExXSmhZMnRuY205MWJtUmZZMjlzYjNKZmRHVnpkR2x0YjI1cFlXeHpKeXdnSjNKblltRW9NakU1TERJeE5Td3lNVFVzTGpncEp5azdYSEpjYmlBZ0lDQnliMjkwTG5OMGVXeGxMbk5sZEZCeWIzQmxjblI1S0NjdExXSmhZMnRuY205MWJtUmZZMjlzYjNKZlpHRnlhMlZ1Snl3Z0ozSm5ZbUVvTWpFNUxESXhOU3d5TVRVc0xqZ3BKeWs3WEhKY2JpQWdJQ0J5YjI5MExuTjBlV3hsTG5ObGRGQnliM0JsY25SNUtDY3RMV052Ykc5eVgzUmxlSFJmZDJocGRHVW5MQ0FuSXpBd01EQXdNQ2NwTzF4eVhHNGdJQ0FnY205dmRDNXpkSGxzWlM1elpYUlFjbTl3WlhKMGVTZ25MUzFpWVdOclozSnZkVzVrWDJOdmJHOXlKeXdnSnlOR1JrWkdSa1luS1RzZ0lGeHlYRzU5Wld4elpTQjdYSEpjYmlBZ0lDQmphR1ZqYTJKdmVDNWphR1ZqYTJWa0lEMGdabUZzYzJVN1hISmNiaUFnSUNCeWIyOTBMbk4wZVd4bExuTmxkRkJ5YjNCbGNuUjVLQ2N0TFdKaFkydG5jbTkxYm1SZlkyOXNiM0pmZEdWemRHbHRiMjVwWVd4ekp5d2dKM0puWW1Fb01Dd3dMREFzTGprcEp5azdYSEpjYmlBZ0lDQnliMjkwTG5OMGVXeGxMbk5sZEZCeWIzQmxjblI1S0NjdExXSmhZMnRuY205MWJtUmZZMjlzYjNKZlpHRnlhMlZ1Snl3Z0ozSm5ZbUVvTUN3d0xEQXNMamtwSnlrN1hISmNiaUFnSUNCeWIyOTBMbk4wZVd4bExuTmxkRkJ5YjNCbGNuUjVLQ2N0TFdOdmJHOXlYM1JsZUhSZmQyaHBkR1VuTENBbkkwWkdSa1pHUmljcE8xeHlYRzRnSUNBZ2NtOXZkQzV6ZEhsc1pTNXpaWFJRY205d1pYSjBlU2duTFMxaVlXTnJaM0p2ZFc1a1gyTnZiRzl5Snl3Z0p5TXhNVEJrTUdNbktUdGNjbHh1ZlZ4eVhHNWNjbHh1SUNBZ0lDQWdJQ0FnWTJobFkydGliM2d1WVdSa1JYWmxiblJNYVhOMFpXNWxjaWduWTJ4cFkyc25MQ0FvS1NBOVBpQjdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHbG1JQ2hzYjJOaGJGTjBiM0poWjJVdVoyVjBTWFJsYlNnbmFYTkRhR1ZqYTJWa0p5a2dQVDA5SUNkMGNuVmxKeWw3WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ2JHOWpZV3hUZEc5eVlXZGxMbk5sZEVsMFpXMG9KMmx6UTJobFkydGxaQ2NzSUdaaGJITmxLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCeWIyOTBMbk4wZVd4bExuTmxkRkJ5YjNCbGNuUjVLQ2N0TFdKaFkydG5jbTkxYm1SZlkyOXNiM0pmZEdWemRHbHRiMjVwWVd4ekp5d2dKM0puWW1Fb01Dd3dMREFzTGprcEp5azdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnY205dmRDNXpkSGxzWlM1elpYUlFjbTl3WlhKMGVTZ25MUzFpWVdOclozSnZkVzVrWDJOdmJHOXlYMlJoY210bGJpY3NJQ2R5WjJKaEtEQXNNQ3d3TEM0NUtTY3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKdmIzUXVjM1I1YkdVdWMyVjBVSEp2Y0dWeWRIa29KeTB0WTI5c2IzSmZkR1Y0ZEY5M2FHbDBaU2NzSUNjalJrWkdSa1pHSnlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdjbTl2ZEM1emRIbHNaUzV6WlhSUWNtOXdaWEowZVNnbkxTMWlZV05yWjNKdmRXNWtYMk52Ykc5eUp5d2dKeU14TVRCa01HTW5LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNCamIyNXpiMnhsTG14dlp5Z25TR1ZzYkc4bktUdGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2ZTQmxiSE5sSUh0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHeHZZMkZzVTNSdmNtRm5aUzV6WlhSSmRHVnRLQ2RwYzBOb1pXTnJaV1FuTENCMGNuVmxLVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKdmIzUXVjM1I1YkdVdWMyVjBVSEp2Y0dWeWRIa29KeTB0WW1GamEyZHliM1Z1WkY5amIyeHZjbDkwWlhOMGFXMXZibWxoYkhNbkxDQW5jbWRpWVNneU1Ua3NNakUxTERJeE5Td3VPQ2tuS1R0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lISnZiM1F1YzNSNWJHVXVjMlYwVUhKdmNHVnlkSGtvSnkwdFltRmphMmR5YjNWdVpGOWpiMnh2Y2w5a1lYSnJaVzRuTENBbmNtZGlZU2d5TVRrc01qRTFMREl4TlN3dU9Da25LVHRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhKdmIzUXVjM1I1YkdVdWMyVjBVSEp2Y0dWeWRIa29KeTB0WTI5c2IzSmZkR1Y0ZEY5M2FHbDBaU2NzSUNjak1EQXdNREF3SnlrN1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnliMjkwTG5OMGVXeGxMbk5sZEZCeWIzQmxjblI1S0NjdExXSmhZMnRuY205MWJtUmZZMjlzYjNJbkxDQW5JMFpHUmtaR1JpY3BPMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQjlYSEpjYmlBZ0lDQWdJQ0FnSUgwcE8xeHlYRzVjY2x4dUlDQWdJQ0FnSUNBZ0x5OWpZV3hqZFd4aGRHVWdiV0Z5WjJsdUlGQlNUMHBGUTFSY2NseHVYSEpjYmlBZ0lDQWdJQ0FnSUdOdmJuTjBJR2x0WVdkbGN5QTlJR1J2WTNWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNKQmJHd2dLQ2N1Y0hKdmFtVmpkRjlmY205M0xYUnZjRjlmYVhSbGJYTW5LU3hjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhkeVlYQndaWElnUFNCa2IyTjFiV1Z1ZEM1eGRXVnllVk5sYkdWamRHOXlJQ2duTG5CeWIycGxZM1JmWDNKdmR5MTBiM0FuS1R0Y2NseHVJQ0FnSUNBZ0lDQWdiR1YwSUhkcFpIUm9TVzBnUFNBd0xDQjNhV1IwYUZkcFpYWndiM0owTENCdFlYSm5PMXh5WEc1Y2NseHVJQ0FnSUNBZ0lDQWdkMmxrZEdoWGFXVjJjRzl5ZENBOUlIZHlZWEJ3WlhJdWIyWm1jMlYwVjJsa2RHZzdYSEpjYmlBZ0lDQWdJQ0JwYldGblpYTXVabTl5UldGamFDZ2dhWFJsYlhNZ0lEMCtJSHRjY2x4dUlDQWdJQ0FnSUNCM2FXUjBhRWx0SUQwZ2QybGtkR2hKYlNBcklHbDBaVzF6TG05bVpuTmxkRmRwWkhSb08xeHlYRzRnSUNBZ0lDQWdmU2s3WEhKY2JpQWdJQ0FnSUNBZ2JXRnlaeUE5SUUxaGRHZ3VjbTkxYm1Rb0tIZHBaSFJvVjJsbGRuQnZjblF0ZDJsa2RHaEpiU2t2TXlrN1hISmNiaUFnSUNBZ0lDQWdjbTl2ZEM1emRIbHNaUzV6WlhSUWNtOXdaWEowZVNnbkxTMXRZWEpuYVc1ZmNtOTNMWFJ2Y0Njc0lHQWtlMjFoY21kOWNIaGdLVHRjY2x4dUlDQWdJQ0FnSUNBaVhYMD0ifQ==
