(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

//cards 
var cards = document.querySelectorAll('.servises__tab__item'),
    text = document.querySelectorAll('.servises__tab__item__text'),
    link = document.querySelectorAll('.servises__link-more'),
    title = document.querySelectorAll('.servises__tab__item__title'),
    cardsParent = document.querySelector('.servises__tab');

function hideContent() {
  text.forEach(function (item) {
    item.style.display = 'none';
  });
  link.forEach(function (item) {
    item.style.display = 'none';
  });
  cards.forEach(function (item) {
    item.classList.remove('active');
  });
  title.forEach(function (item) {
    item.classList.remove('active_title');
  });
}

function showContent(i) {
  text[i].style.display = 'block';
  link[i].style.display = 'block';
  cards[i].classList.add('active');
  title[i].classList.add('active_title');
}

hideContent();
showContent(0);
cardsParent.addEventListener('click', function () {
  var target = event.target;

  if (target && target.classList.contains('servises__tab__item')) {
    cards.forEach(function (item, i) {
      if (target === item) {
        hideContent();
        showContent(i);
      }
    });
  }
}); //slider

var sliders = document.querySelectorAll('.testimonials__slider-items__item');
var prev = document.querySelector('.prev');
var next = document.querySelector('.next');
var slideIndex = 1;
showSlide(slideIndex);

function showSlide(n) {
  if (n > sliders.length) {
    slideIndex = 1;
  }

  if (n < 1) {
    slideIndex = sliders.length;
  }

  sliders.forEach(function (item) {
    return item.style.display = 'none';
  });
  sliders[slideIndex - 1].style.display = '';
}

function plusSlides(n) {
  showSlide(slideIndex += n);
}

prev.addEventListener('click', function () {
  plusSlides(-1);
});
next.addEventListener('click', function () {
  plusSlides(1);
}); // end slider
//burger 

var burgerMenu = document.querySelector('.header__menu'),
    menuItem = document.querySelector('.navigation__menu-burger');
showMenu();

function showMenu() {
  burgerMenu.addEventListener('click', function () {
    var styleMenu = window.getComputedStyle(menuItem);

    if (styleMenu.display === 'none') {
      menuItem.style.display = 'block';
    } else {
      menuItem.style.display = 'none';
    }
  });
  menuItem.addEventListener('click', function () {
    menuItem.style.display = 'none';
  });
} // end burger menu


var offset = 100;
var scrollUp = document.querySelector('.main-screen__scroll-up');
var scrollUpSvgPath = document.querySelector('.main-screen__scroll-up__svg-path');
var pathLength = scrollUpSvgPath.getTotalLength();

var getTop = function getTop() {
  return window.pageYOffset || document.documentElement.scrollTop;
};

scrollUpSvgPath.style.strokeDasharray = "".concat(pathLength, " ").concat(pathLength);
scrollUpSvgPath.style.transition = 'stroke-dashoffset 20ms'; // update dash offset

var updateDashOffset = function updateDashOffset() {
  var height = document.documentElement.scrollHeight - window.innerHeight;
  var dashoffset = pathLength - getTop() * pathLength / height;
  scrollUpSvgPath.style.strokeDashoffset = dashoffset;
}; //onscroll


window.addEventListener('scroll', function () {
  updateDashOffset();

  if (getTop() > offset) {
    scrollUp.classList.add('main-screen__scroll-up--active');
  } else {
    scrollUp.classList.remove('main-screen__scroll-up--active');
  }
}); //clik

scrollUp.addEventListener('click', function () {
  window.scrollTo({
    top: 0,
    behavior: 'smooth'
  });
});
updateDashOffset();

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
